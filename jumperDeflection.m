function [ deflection, energyOneSpring ] = ...
    jumperDeflection(numberOfElements, youngsModulus, ...
                     springWidth, springThickness, ...
                     uncompressedLength, compressedLength, numberOfSprings)

dLength = uncompressedLength / numberOfElements;  % m

secondMomentOfArea = springWidth * springThickness^3 / 12;  % m^4

torsionalStiffness = youngsModulus * secondMomentOfArea / dLength; % N-m 

initialDeflection = pi / (numberOfElements + 1) * ones(1, numberOfElements);

[deflection, energyOneSpring] = ...
    fmincon(@(deflection) energyFun(deflection, torsionalStiffness), ...
            initialDeflection, ...
            [], [], [], [], [], [], ...
            @(deflection) constraintFun(deflection, dLength, compressedLength));


end
