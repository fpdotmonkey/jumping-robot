function [ velocity, velocity_LB, velocity_UB ] = ...
        velocityError(payloadMass, payloadMassError, ...
                      springLength, springLengthError, ...
                      dragRadius, dragRadiusError, ...
                      specificDrag, dragMassPerArea, ...
                      springArea, springDensity, ...
                      dragCoefficient, airDensity, gravity)

    designParameters = [ payloadMass;
                        springLength;
                        dragRadius ];
    designParametersError = [ payloadMassError;
                        springLengthError; ...
                        dragRadiusError ];
    
    [ x_LB, x_UB, ...
      velocity_LB, velocity, velocity_UB, ...
      minus_percent, plus_percent ]  = ...
        worstcase(@(designParameters) velocityCalculate(designParameters), ...
                  designParameters, ...
                  designParametersError);

    function velocity = velocityCalculate(designParameters)
    % designParameters = [ payloadMass, springLength, dragRadius ]
        dragArea = pi * designParameters(3)^2;
        totalMass = designParameters(1) + dragMassPerArea * dragArea + ...
            springDensity * springArea * designParameters(2);
        velocity = sqrt(totalMass * gravity / (dragCoefficient * airDensity ...
                                               * dragArea));
    end

end
